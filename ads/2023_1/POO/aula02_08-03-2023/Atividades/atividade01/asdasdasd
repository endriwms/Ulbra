new Vue({
  el: "#app",
  data: {
    name: "",
    age: "",
    youngPeople: [],
    adultPeople: [],
    elderlyPeople: []
  },
  methods: {
    addPerson() {
      const person = { name: this.name, age: this.age };
      switch (true) {
        case (this.age <= 19):
          if (this.youngPeople.length < 5) {
            this.youngPeople.push(person);
          } else {
            alert("A tabela de Jovens está cheia!");
          }
          break;
        case (this.age >= 60):
          if (this.elderlyPeople.length < 5) {
            this.elderlyPeople.push(person);
          } else {
            alert("A tabela de Idosos está cheia!");
          }
          break;
        default:
          if (this.adultPeople.length < 5) {
            this.adultPeople.push(person);
          } else {
            alert("A tabela de Adultos está cheia!");
          }
          break;
      }
      this.name = "";
      this.age = "";
      this.sortPeople();
    },
    editPerson(person) {
      this.name = person.name;
      this.age = person.age;
      switch (true) {
        case (this.youngPeople.includes(person)):
          this.youngPeople.splice(this.youngPeople.indexOf(person), 1);
          break;
        case (this.elderlyPeople.includes(person)):
          this.elderlyPeople.splice(this.elderlyPeople.indexOf(person), 1);
          break;
        default:
          this.adultPeople.splice(this.adultPeople.indexOf(person), 1);
          break;
      }
    this.sortPeople();
    },
    deletePerson(person) {
      switch (true) {
        case (this.youngPeople.includes(person)):
          this.youngPeople.splice(this.youngPeople.indexOf(person), 1);
          break;
        case (this.elderlyPeople.includes(person)):
          this.elderlyPeople.splice(this.elderlyPeople.indexOf(person), 1);
          break;
        default:
          this.adultPeople.splice(this.adultPeople.indexOf(person), 1);
          break;
      }
      this.sortPeople();
    },
    sortPeople() {
      this.youngPeople.sort((a, b) => b.age - a.age);
      this.adultPeople.sort((a, b) => b.age - a.age);
      this.elderlyPeople.sort((a, b) => b.age - a.age);
    }
  }
});